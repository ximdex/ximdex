// Generated by CoffeeScript 1.8.0
angular.module("ximdex.common.directive").directive("ximResizer", function($document) {
  return function($scope, $element, $attrs) {
    var expanded, hidePanel, listenHidePanel, mousemove, mouseup, showPanel, size, togglePanel;
    size = 300;
    expanded = $($attrs.ximResizerToggle).hasClass("hide");
    listenHidePanel = true;
    mousemove = function(event) {
      var x;
      x = event.pageX;
      if (x > $document.width() - 17) {
        x = $document.width() - 17;
      }
      if ($attrs.ximResizerMin && x < $attrs.ximResizerMin) {
        x = parseInt($attrs.ximResizerMin);
      }
      $element.css({
        left: x + "px"
      });
      $($attrs.ximResizerLeft).css({
        width: x + "px"
      });
      $($attrs.ximResizerRight).css({
        left: (x + parseInt($attrs.ximResizerWidth)) + "px"
      });
    };
    mouseup = function() {
      $document.unbind("mousemove", mousemove);
      $document.unbind("mouseup", mouseup);
    };
    $element.on("mousedown", function(event) {
      if (expanded) {
        event.preventDefault();
        $document.on("mousemove", mousemove);
        $document.on("mouseup", mouseup);
      }
    });
    hidePanel = function() {
      var a, b;
      if (!expanded && listenHidePanel) {
        a = 7;
        b = parseInt($attrs.ximResizerWidth) + a;
        $($attrs.ximResizerLeft).animate({
          width: a + "px"
        }, 400, function() {});
        $($attrs.ximResizerRight).animate({
          left: b + "px"
        }, 400, function() {});
        $element.animate({
          left: a + "px"
        }, 400, function() {
          return listenHidePanel = false;
        });
      }
    };
    showPanel = function() {
      if (!expanded && !listenHidePanel) {
        $($attrs.ximResizerLeft).animate({
          width: size + "px"
        }, 400, function() {});
        $($attrs.ximResizerRight).animate({
          left: parseInt($attrs.ximResizerWidth) + size + "px"
        }, 400, function() {});
        $element.animate({
          left: size + "px"
        }, 400, function() {
          return listenHidePanel = true;
        });
      }
    };
    $element.on("mouseenter", showPanel);
    $($attrs.ximResizerLeft).on("mouseleave", hidePanel);
    togglePanel = function(event) {
      $(this).toggleClass("hide");
      $(this).toggleClass("tie");
      expanded = !expanded;
      if (!expanded) {
        size = $($attrs.ximResizerLeft).width();
        hidePanel();
      }
    };
    $($attrs.ximResizerToggle).on("click", togglePanel);
  };
});
