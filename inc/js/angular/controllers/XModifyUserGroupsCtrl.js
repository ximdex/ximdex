// Generated by CoffeeScript 1.8.0
angular.module("ximdex.main.controller").controller('XModifyUserGroupsCtrl', [
  '$scope', '$http', 'xUrlHelper', '$window', '$filter', 'xDialog', function($scope, $http, xUrlHelper, $window, $filter, xDialog) {
    var orderAndReset, orderBy;
    orderBy = $filter('orderBy');
    orderAndReset = function() {
      $scope.filtered_groups = orderBy($scope.filtered_groups, 'Name');
      if ($scope.filtered_groups.length > 0) {
        $scope.newGroup = $scope.filtered_groups[0];
      }
      if ($scope.all_roles.length > 0) {
        $scope.newRole = $scope.all_roles[0].IdRole;
      }
    };
    $scope.init = function() {
      if ($scope.filtered_groups.length > 0) {
        $scope.newGroup = $scope.filtered_groups[0];
      }
      if ($scope.all_roles.length > 0) {
        $scope.newRole = $scope.all_roles[0].IdRole;
      }
    };
    $scope.addGroup = function() {
      var group, role, url;
      role = $scope.newRole;
      group = $scope.newGroup;
      url = xUrlHelper.getAction({
        action: 'modifyusergroups',
        method: 'suscribegroupuser'
      });
      return $http.get(url + "&nodeid=" + $scope.nodeid + "&newgroup=" + group.IdGroup + "&newrole=" + role).success(function(data, status, headers, config) {
        var index, ngroup;
        if (data.result === "OK") {
          ngroup = {
            IdGroup: group.IdGroup,
            Name: group.Name,
            IdRole: role,
            dirty: false
          };
          $scope.user_groups_with_role.push(ngroup);
          index = $scope.filtered_groups.indexOf(group);
          $scope.filtered_groups.splice(index, 1);
          orderAndReset();
        }
      }).error(function(data, status, headers, config) {});
    };
    $scope.update = function(index) {
      var group, role, url;
      role = $scope.user_groups_with_role[index].IdRole;
      group = $scope.user_groups_with_role[index].IdGroup;
      url = xUrlHelper.getAction({
        action: 'modifyusergroups',
        method: 'updategroupuser'
      });
      $http.get(url + "&nodeid=" + $scope.nodeid + "&group=" + group + "&role=" + role).success(function(data, status, headers, config) {
        if (data.result === "OK") {
          $scope.user_groups_with_role[index].dirty = false;
        }
      }).error(function(data, status, headers, config) {});
    };
    $scope.openDeleteModal = function(index) {
      $scope.index = index;
      xDialog.openConfirmation($scope["delete"], "ui.dialog.messages.you_are_going_to_delete_this_association,_do_you_want_to_continue?");
    };
    return $scope["delete"] = function(res) {
      var group, index, url;
      if (!res) {
        return;
      }
      index = $scope.index;
      group = $scope.user_groups_with_role[index].IdGroup;
      url = xUrlHelper.getAction({
        action: 'modifyusergroups',
        method: 'deletegroupuser'
      });
      $http.get(url + "&nodeid=" + $scope.nodeid + "&group=" + group).success(function(data, status, headers, config) {
        if (data.result === "OK") {
          group = {
            IdGroup: group,
            Name: $scope.user_groups_with_role[index].Name
          };
          $scope.filtered_groups.push(group);
          $scope.user_groups_with_role.splice(index, 1);
          orderAndReset();
        }
      }).error(function(data, status, headers, config) {});
    };
  }
]);
